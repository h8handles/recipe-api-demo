{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","className","onSubmit","e","preventDefault","type","value","onChange","target","map","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAkBeA,EAhBA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MAC5B,OACI,gCAEI,6BAAKF,IACF,4BAAIC,IACH,qBAAKE,IAAKD,EAAOE,IAAI,SCqDtBC,G,MAvDH,WACV,IAIA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,KAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,UAGAC,qBAAW,WACTC,MACC,CAACF,IAEJ,IAAME,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCJ,EAApC,mBAdf,WAce,oBAbd,qCAYG,cACXK,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBV,EAAWU,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAiBhB,OACE,sBAAKG,UAAU,MAAf,UACE,uBAAMC,SARQ,SAAAC,GAChBA,EAAEC,iBACFf,EAAU,MAMmBY,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAaI,KAAK,OAAOC,MAAOlB,EAAQmB,SAd1C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAcb,wBAAQL,UAAU,gBAAgBI,KAAK,SAAvC,oBACV,gDAEOnB,EAAQuB,KAAI,SAAAC,GAAM,OAEjB,cAAC,EAAD,CAAkC/B,MAAO+B,EAAOA,OAAOC,MAAO/B,SAAU8B,EAAOA,OAAO9B,SAAUC,MAAO6B,EAAOA,OAAO7B,OAAxG6B,EAAOA,OAAOC,eClCpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a48bc743.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Recipe = ({title,calories,image}) => {\n    return(\n        <div>\n            \n            <h1>{title}</h1>\n               <p>{calories}</p> \n                <img src={image} alt=\"\" />\n\n\n        </div>\n\n\n    );\n\n}\n\nexport default Recipe;","import React,{useEffect, useState} from \"react\"; \nimport Recipe from \"./Recipe\";\n\n\nimport './App.css';\n\nconst App = () => {\n  const APP_ID = '805f568b'\n  const APP_KEY = 'e57c261aca7fd0a11db5d1ba5edab6e8'\n\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(' ')\n  const [query, setQuery] = useState('chicken')\n\n\n  useEffect( () => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits)\n  }\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    \n\n  }\n  const getSearch = e => {\n    e.preventDefault();\n    setSearch(\" \")\n\n  }\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n          <button className=\"search-button\" type=\"submit\">Search</button>\n<h1>hello world</h1>\n      </form>\n      {recipes.map(recipe => (\n\n        <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image}/>\n\n\n      ))}\n\n    </div>\n\n  );\n\n};\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}